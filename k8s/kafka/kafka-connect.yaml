apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  labels:
    app: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - name: kafka-connect
        image: debezium/connect:2.4
        ports:
        - containerPort: 8083
        env:
        - name: BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: GROUP_ID
          value: "connect-cluster"
        - name: CONFIG_STORAGE_TOPIC
          value: "connect-configs"
        - name: OFFSET_STORAGE_TOPIC
          value: "connect-offsets"
        - name: STATUS_STORAGE_TOPIC
          value: "connect-status"
        - name: CONFIG_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: OFFSET_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: STATUS_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: "kafka-connect-service"
        - name: CONNECT_PLUGIN_PATH
          value: "/kafka/connect"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "400m"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect-service
spec:
  selector:
    app: kafka-connect
  ports:
  - port: 8083
    targetPort: 8083
  type: ClusterIP
